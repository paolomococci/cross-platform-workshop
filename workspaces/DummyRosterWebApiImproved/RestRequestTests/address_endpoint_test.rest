# address endpoint tests

### create a new fictitious data entry

POST https://localhost:5001/api/addresses HTTP/1.1
Content-Type: application/json
Content-Length: 220

{
  "Name": "SomeOne Street",
  "Civic": "15/B",
  "City": "SomeOneCity",
  "District": "SomeOneDistrict",
  "Postcode": "010101",
  "Country": "SomeOneCountry",
  "Email": "some.one@example.local",
  "Phone": "039035801010101",
  "Fax": "039035801010102"
}

### create a new fictitious data entry

POST https://localhost:5001/api/addresses HTTP/1.1
Content-Type: application/json
Content-Length: 219

{
  "Name": "SomeTwo Street",
  "Civic": "101",
  "City": "SomeTwoCity",
  "District": "SomeTwoDistrict",
  "Postcode": "010110",
  "Country": "SomeTwoCountry",
  "Email": "some.two@example.local",
  "Phone": "039035801010110",
  "Fax": "039035801010111"
}

### create a new fictitious data entry

POST https://localhost:5001/api/addresses HTTP/1.1
Content-Type: application/json
Content-Length: 229

{
  "Name": "SomeThree Street",
  "Civic": "101",
  "City": "SomeThreeCity",
  "District": "SomeThreeDistrict",
  "Postcode": "010110",
  "Country": "SomeThreeCountry",
  "Email": "some.three@example.local",
  "Phone": "039035801010113",
  "Fax": "039035801010114"
}

### read

GET https://localhost:5001/api/addresses/2 HTTP/1.1

### read all

GET https://localhost:5001/api/addresses HTTP/1.1

### update a fictitious data entry with id 2

PUT https://localhost:5001/api/addresses/2 HTTP/1.1
Content-Type: application/json
Content-Length: 287

{
  "id": 2,
  "Name": "SomeTwo avenue",
  "Civic": "101/D",
  "City": "SomeTwoCity",
  "District": "SomeTwoDistrict",
  "Postcode": "010110",
  "Country": "SomeTwoCountry",
  "Email": "some.two@example.local",
  "Phone": "039035801010110",
  "Fax": "039035801010111",
  "carriers": [],
  "customers": [],
  "employees": [],
  "suppliers": []
}

### partial update a fictitious data entry with id 2

PATCH https://localhost:5001/api/addresses/2 HTTP/1.1
Content-Type: application/json
Content-Length: 32

{
  "id": 2,
  "Name": "SomeTwo square"
}
